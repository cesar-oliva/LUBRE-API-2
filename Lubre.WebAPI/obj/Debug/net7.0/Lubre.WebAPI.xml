<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lubre.WebAPI</name>
    </assembly>
    <members>
        <member name="F:Lubre.WebAPI.Controllers.AddressController._addressRepository">
            <summary>
            receives by parameter the application in Address and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="address"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.AddressController.GetAllAsync">
            <summary>
            get a list of address objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.AddressController.GetOne(System.Guid)">
            <summary>
            get a address object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type address
            </remarks>
            <param name="id">object id</param>
            <returns>unit object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.AddressController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterAddressRequestDTO)">
            <summary>
            update a address objetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the address by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.AddressController.Delete(System.Guid)">
            <summary>
            Delete a address object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the address by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="F:Lubre.WebAPI.Controllers.CountryController._countryRepository">
            <summary>
            receives by parameter the application in Country and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="country"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.CountryController.GetAllAsync">
            <summary>
            get a list of country objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.CountryController.GetOne(System.Guid)">
            <summary>
            get a country object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type country
            </remarks>
            <param name="id">object id</param>
            <returns>unit object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.CountryController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterCountryRequestDTO)">
            <summary>
            update a country objetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the country by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.CountryController.Delete(System.Guid)">
            <summary>
            Delete a country object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the country by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.DefaultController.Get">
            <summary>
            Default controller
            </summary>
        </member>
        <member name="F:Lubre.WebAPI.Controllers.EmployeeController._employeeRepository">
            <summary>
            receives by parameter the application in Employee and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="employee"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.EmployeeController.GetAllAsync">
            <summary>
            get a list of employee objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.EmployeeController.GetOne(System.Guid)">
            <summary>
            get a employee object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type employee
            </remarks>
            <param name="id">object id</param>
            <returns>employee object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.EmployeeController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterEmployeeRequestDTO)">
            <summary>
            update a employee objetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the employee by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.EmployeeController.Delete(System.Guid)">
            <summary>
            Delete a employe object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the employee by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="F:Lubre.WebAPI.Controllers.GenderController._genderRepository">
            <summary>
            receives by parameter the application in Gender and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="gender"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.GenderController.GetAllAsync">
            <summary>
            get a list of gender objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.GenderController.GetOne(System.Guid)">
            <summary>
            get a gender object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type gender
            </remarks>
            <param name="id">object id</param>
            <returns>gender object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.GenderController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterGenderRequestDTO)">
            <summary>
            update a gender objetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the gender by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.GenderController.Delete(System.Guid)">
            <summary>
            Delete a gender object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the gender by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="F:Lubre.WebAPI.Controllers.PositionController._positionRepository">
            <summary>
            receives by parameter the application in Position and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="position"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.PositionController.GetAllAsync">
            <summary>
            get a list of position objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.PositionController.GetOne(System.Guid)">
            <summary>
            get a position object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type position 
            </remarks>
            <param name="id">object id</param>
            <returns>position  object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.PositionController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterPositionRequestDTO)">
            <summary>
            update a position objetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the position by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.PositionController.Delete(System.Guid)">
            <summary>
            Delete a position object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the position by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="F:Lubre.WebAPI.Controllers.StateController._stateRepository">
            <summary>
            receives by parameter the application in State and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="state"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.StateController.GetAllAsync">
            <summary>
            get a list of state objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.StateController.GetOne(System.Guid)">
            <summary>
            get a state object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type state
            </remarks>
            <param name="id">object id</param>
            <returns>unit object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.StateController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterStateRequestDTO)">
            <summary>
            update a stateobjetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the state by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.StateController.Delete(System.Guid)">
            <summary>
            Delete a state object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the state by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="F:Lubre.WebAPI.Controllers.TownController._townRepository">
            <summary>
            receives by parameter the application in Unit and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="town"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.TownController.GetAllAsync">
            <summary>
            get a list of town objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.TownController.GetOne(System.Guid)">
            <summary>
            get a unit object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type unit
            </remarks>
            <param name="id">object id</param>
            <returns>unit object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.TownController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterTownRequestDTO)">
            <summary>
            update a town objetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the town by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.TownController.Delete(System.Guid)">
            <summary>
            Delete a town object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the town by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="F:Lubre.WebAPI.Controllers.UnitController._unitRepository">
            <summary>
            receives by parameter the application in Unit and we inject it
            </summary>
            <remarks>
            
            </remarks>
            <param name="unit"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.UnitController.GetAllAsync">
            <summary>
            get a list of unit objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.UnitController.GetOne(System.Guid)">
            <summary>
            get a unit object
            </summary>
            <remarks>
            receives an id from the client and returns an object of type unit
            </remarks>
            <param name="id">object id</param>
            <returns>unit object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.UnitController.Update(System.Guid,Lubre.Repository.DataTransferObject.Incoming.RegisterUnitRequestDTO)">
            <summary>
            update a unit objetc by id
            </summary>
            <remarks>
            Receive the object to modify, look for the unit by id, map the entities request the update
            </remarks>
            <param name="dto"></param>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
        <member name="M:Lubre.WebAPI.Controllers.UnitController.Delete(System.Guid)">
            <summary>
            Delete a unit object by id
            </summary>
            <remarks>
             Receive the object to deleted, look for the unit by id, request the delete
            </remarks>
            <param name="id"></param>
            <returns>response object</returns>
            <response code="200"> OK. returns the requested object </response>
            <response code="400"> NotFound. returns the requested object was not found </response>
        </member>
    </members>
</doc>
